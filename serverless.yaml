service: upwork
useDotenv: true

custom:
  dynamodb:
    stages:
      - dev

package:
  patterns:
    - '!.dynamodb'

provider:
  name: aws
  runtime: nodejs10.x
  region: us-west-1
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  environment:
    WORK_LIST_TN: ${self:service}-${opt:stage, self:provider.stage}-WORK-LIST
    FETCH_URL: ${env:FETCH_URL}
    STAGE: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
          Resource: "*"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  insert:
    name: insert-single
    handler: index.insert
    events:
      - http:
          path: insert
          method: get
  fetch_works:
    name: fetch-works
    handler: index.fetch_works
    events:
      - http:
          path: fetch
          method: get

resources:
  Resources:
    WorkListTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-WORK-LIST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST